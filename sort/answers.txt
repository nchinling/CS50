sort1 uses: TODO

How do you know?: TODO

reversed5000 takes: real 0.078s, user 0.052s, sys 0.020s
random5000 takes:   real 0.080s, user 0.057s, sys 0.019s
sorted5000 takes:   real 0.072s, user 0.012s, sys 0.012s

sort2 uses: TODO
reversed5000 takes: real 0.102s, user 0.056s, sys 0.021s
random5000 takes: real 0.079s, user 0.003s, sys 0.025s
sorted5000 takes: real 0.031s, user 0.004s, sys 0.023s

How do you know?: TODO

sort3 uses: TODO
reversed5000 takes: real 0.077s, user 0.026s, sys 0.026s
random5000 takes: real 0.059s, user 0.030s, sys 0.019s
sorted5000 takes: real 0.051s, user 0.031s, sys 0.019s


How do you know?: TODO

Observation:
Shortest time for sorted numbers: Sort 2 -> merge
Shortest time for random numbers: Sort 3
Shortest time for reversed: sort1 and sort 2 tie

Longest time for sorted numbers: Sort 1
Longest time for random number: Sort 1 and sort 2
Longest time for reversed: Sort 2

Bubble sort: best time: Omega(N), worse time: O(n^2)
Selection sort: best Omega(n^2), worse time: O(n^2)
Merge sort: Best Omega(nlogn), worst time: O(nlogn)

